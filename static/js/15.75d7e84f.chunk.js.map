{"version":3,"sources":["../node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/index.js","../node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFill.js","../node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillSeries.js","../node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillView.js","../node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillLayout.js","views/Test/echart/index.jsx"],"names":["module","exports","require","echarts","registerVisual","util","curry","completeDimensions","extendSeriesModel","type","visualColorAccessPath","optionUpdated","option","this","gridSize","Math","max","floor","getInitialData","ecModel","dimensions","data","list","List","initData","defaultOption","color","center","radius","amplitude","waveLength","phase","period","direction","shape","waveAnimation","animationEasing","animationEasingUpdate","animationDuration","animationDurationUpdate","outline","show","borderDistance","itemStyle","borderColor","borderWidth","shadowBlur","shadowColor","backgroundStyle","opacity","label","insideColor","fontSize","fontWeight","align","baseline","position","emphasis","numberUtil","number","symbolUtil","parsePercent","LiquidLayout","extendChartView","render","seriesModel","api","group","removeAll","getData","itemModel","getItemModel","get","width","getWidth","height","getHeight","size","min","outlineDistance","outlineBorderWidth","showOutline","outterRadius","innerRadius","paddingRadius","cx","cy","isFillContainer","symbol","getOutline","style","lineWidth","add","left","top","wavePath","strokePath","getPath","setStyle","getModel","getItemStyle","fill","z2","fillPath","stroke","graphic","Group","getBackground","oldData","_data","waves","r","isForClipping","indexOf","path","makePath","slice","bouding","getBoundingRect","w","h","BoundingRect","x","y","createSymbol","Circle","outlinePath","getWave","idx","isInverse","oldWave","radiusX","radiusY","itemStyleModel","waterLevel","PI","normalStyle","seriesColor","id","length","wave","inverse","_waterLevel","hoverStyle","setHoverStyle","clip","setClipPath","setWaveAnimation","maxSpeed","value","speed","cnt","count","defaultSpeed","phaseOffset","console","error","animate","when","during","dirty","start","diff","initProps","setItemGraphicEl","push","update","newIdx","oldIdx","waveElement","getItemGraphicEl","newWave","shapeAttrs","i","attr","hasOwnProperty","styleAttrs","updateProps","useStyle","clipPath","remove","execute","labelModel","textOption","text","formatted","getFormattedLabel","defaultVal","defaultLabel","getName","name","isNaN","toFixed","formatLabel","textAlign","textVerticalAlign","silent","outsideTextRect","Rect","setText","insideTextRect","insColor","textFill","boundingCircle","CompoundPath","paths","getText","dispose","getWaterPositions","stage","extendShape","buildPath","ctx","curves","ceil","moveTo","waveRight","c","pos","bezierCurveTo","lineTo","closePath","colorList","yearData","2020","year","2021","EchartDemo","backToBot","$dom","scrollIntoView","behavior","block","initChart1","init","document","getElementById","setOption","title","textStyle","tooltip","legend","xAxis","yAxis","series","initChart2","trigger","axisPointer","grid","axisLine","lineStyle","axisLabel","interval","axisTick","alignWithLabel","minInterval","splitLine","barWidth","barBorderRadius","initChart3","bottom","containLabel","yAxisIndex","barCategoryGap","params","dataIndex","formatter","initChart4","myChart","backgroundColor","RadialGradient","offset","rotation","bounding","right","z","children","font","shadowOffsetX","shadowOffsetY","join","normal","initChart5","toolbox","feature","saveAsImage","boundaryGap","smooth","initChart6","areaStyle","LinearGradient","showSymbol","symbolSize","focus","className","ref","el","href","onClick","bind","Component"],"mappings":"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","file":"static/js/15.75d7e84f.chunk.js","sourcesContent":["module.exports = require('./src/liquidFill');\n","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape\n                }, seriesModel);\n\n                waveElement.useStyle(style);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","/* eslint-disable no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-console */\r\n/* eslint-disable prefer-rest-params */\r\n/* eslint-disable no-irregular-whitespace */\r\nimport React, { Component } from 'react';\r\nimport echarts from 'echarts';\r\nimport 'echarts-liquidfill';\r\n\r\nimport './index.scss';\r\n\r\nconst colorList = ['#1089e7', '#f57474', '#56D0E3', '#F8d448', '#8B78F7', '#4fc08d'];\r\n\r\nconst yearData = {\r\n  2020: {\r\n    year: '2020', // 年份\r\n    data: [\r\n      // 两个数组是因为有两条线\r\n      [120, 182, 91, 24, 110, 330, 110],\r\n      [203, 32, 91, 234, 290, 130, 210],\r\n    ],\r\n  },\r\n  2021: {\r\n    year: '2021',\r\n    data: [\r\n      [34, 182, 191, 234, 390, 330, 310],\r\n      [260, 382, 191, 224, 210, 30, 10],\r\n    ],\r\n  },\r\n};\r\n\r\nclass EchartDemo extends Component {\r\n  componentDidMount() {\r\n    this.backToBot();\r\n    this.initChart1();\r\n    this.initChart2();\r\n    this.initChart3();\r\n    this.initChart4();\r\n    this.initChart5();\r\n    this.initChart6();\r\n  }\r\n\r\n  backToBot = () => {\r\n    this.$dom.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'end',\r\n    });\r\n    //   window.scrollTo({\r\n    //    top: 0,\r\n    //     behavior: 'smooth'\r\n    //   })\r\n  };\r\n\r\n  initChart1 = () => {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    const myChart = echarts.init(document.getElementById('main1'));\r\n    // 指定图表的配置项和数据\r\n    const option = {\r\n      color: ['#f00', '#000'],\r\n      title: {\r\n        text: 'ECharts 入门示例',\r\n        textStyle: {\r\n          fontSize: '12px',\r\n          color: 'green',\r\n        },\r\n      },\r\n      tooltip: {},\r\n      // series里面的name已经有，则legend不必配置\r\n      legend: {\r\n        data: ['销量1', '销量2'],\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子'],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量1',\r\n          type: 'bar',\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n        {\r\n          name: '销量2',\r\n          type: 'line',\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n      ],\r\n    };\r\n\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  initChart2 = () => {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    const myChart = echarts.init(document.getElementById('main2'));\r\n    // 指定图表的配置项和数据\r\n    const option = {\r\n      color: ['#3398DB'],\r\n      title: {\r\n        // text: '柱状图示例',\r\n        textStyle: {\r\n          fontSize: '12px',\r\n          color: '#4fc08d',\r\n        },\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n          // 坐标轴指示器，坐标轴触发有效\r\n          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n        },\r\n      },\r\n      grid: {\r\n        left: '6%',\r\n      },\r\n      // series里面的name已经有，则legend不必配置\r\n      legend: {\r\n        data: ['销量1', '销量2'],\r\n      },\r\n      // x轴样式不显示\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          axisLine: {\r\n            show: false,\r\n            // 如果想要设置单独的线条样式\r\n            lineStyle: {},\r\n          },\r\n          // 修改刻度标签相关样式\r\n          axisLabel: {\r\n            color: '#4fc08d',\r\n            fontSize: '12',\r\n            interval: 1, // 横坐标间隔\r\n          },\r\n          axisTick: {\r\n            alignWithLabel: true,\r\n          },\r\n          data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子'],\r\n          minInterval: 1,\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n          // 修改刻度标签相关样式\r\n          axisLabel: {\r\n            color: '#4fc08d',\r\n            fontSize: 12,\r\n          },\r\n          axisLine: {\r\n            show: true, // 是否显示坐标轴轴线。\r\n            // 如果想要设置单独的线条样式\r\n            lineStyle: {\r\n              color: '#4fc08d',\r\n              width: 6,\r\n            },\r\n          },\r\n          // 坐标轴在 grid 区域中的分隔线。 y轴分割线\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'red',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: '销量1',\r\n          type: 'bar',\r\n          barWidth: '20', // 可以是绝对值例如 40 或者百分数例如 '60%\r\n          itemStyle: {\r\n            barBorderRadius: 5, // 修改柱子圆角\r\n          },\r\n          data: [5, 20, 36, 10, 10, 20],\r\n        },\r\n      ],\r\n    };\r\n\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  initChart3 = () => {\r\n    // 基于准备好的dom，初始化echarts实例\r\n    const myChart = echarts.init(document.getElementById('main3'));\r\n    // 指定图表的配置项和数据\r\n    const option = {\r\n      grid: {\r\n        left: '22%',\r\n        bottom: '10%',\r\n        containLabel: false,\r\n      },\r\n      // 不显示x轴相关信息\r\n      xAxis: {\r\n        show: false,\r\n      },\r\n      yAxis: [\r\n        {\r\n          type: 'category',\r\n          data: ['HTML5', 'CSS3', 'JavaScript', 'VUE', 'NODE', 'React'],\r\n          inverse: true, // 是否是反向坐标轴，默认false\r\n          axisLine: {\r\n            show: false, // 不显示y轴线条\r\n          },\r\n          axisTick: {\r\n            show: false, // 不显示刻度\r\n          },\r\n          axisLabel: {\r\n            color: '#4fc08d', // y轴 刻度标签文字 改为白色\r\n          },\r\n        },\r\n        {\r\n          type: 'category',\r\n          data: [100, 100, 100, 100, 100, 100],\r\n          inverse: true,\r\n          axisLine: {\r\n            show: false, // 不显示y轴线条\r\n          },\r\n          axisTick: {\r\n            show: false, // 不显示刻度\r\n          },\r\n          axisLabel: {\r\n            color: '#4fc08d', // y轴 刻度标签文字 改为白色\r\n          },\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: '条',\r\n          type: 'bar',\r\n          data: [30, 20, 80, 79, 90, 100],\r\n          yAxisIndex: 0,\r\n          // 柱子之间的距离\r\n          barCategoryGap: 50,\r\n          // 柱子的高度\r\n          barWidth: 10,\r\n          itemStyle: {\r\n            // 修改第一个柱子的圆角\r\n            barBorderRadius: 20,\r\n            // 给第一个柱子设置颜色 可以string 也可以function\r\n            color(params) {\r\n              // console.log(params);\r\n              return colorList[params.dataIndex];\r\n            },\r\n          },\r\n          // 显示柱子内的文字\r\n          label: {\r\n            show: true,\r\n            position: 'inside',\r\n            // 文字的显示格式 c会自动解析为data数据 https://echarts.apache.org/zh/option.html#series-bar.label.formatter\r\n            formatter: '{c}%',\r\n          },\r\n        },\r\n        {\r\n          name: '框',\r\n          type: 'bar',\r\n          data: [100, 100, 100, 100, 100, 100],\r\n          yAxisIndex: 1,\r\n          barCategoryGap: 50,\r\n          barWidth: 15,\r\n          itemStyle: {\r\n            color: 'none',\r\n            borderWidth: 3,\r\n            barBorderRadius: 15,\r\n            borderColor: '#00c1de',\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  initChart4 = () => {\r\n    const myChart = echarts.init(document.getElementById('main4'));\r\n    const value = 0.2;\r\n    const data = [value, value, value];\r\n    const option = {\r\n      backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, [\r\n        {\r\n          offset: 0,\r\n          color: '#431ab8',\r\n        },\r\n        {\r\n          offset: 1,\r\n          color: '#471bba',\r\n        },\r\n      ]),\r\n      title: {\r\n        text: 'CPU使用率',\r\n        textStyle: {\r\n          fontWeight: 'normal',\r\n          fontSize: 25,\r\n          color: 'rgb(97, 142, 205)',\r\n        },\r\n      },\r\n      graphic: [\r\n        {\r\n          type: 'group',\r\n          rotation: Math.PI / 4,\r\n          bounding: 'raw',\r\n          right: 110,\r\n          bottom: 110,\r\n          z: 100,\r\n          children: [\r\n            {\r\n              type: 'rect',\r\n              left: 'center',\r\n              top: 'center',\r\n              z: 100,\r\n              shape: {\r\n                width: 400,\r\n                height: 50,\r\n              },\r\n              style: {\r\n                fill: 'rgba(0,0,0,0.3)',\r\n              },\r\n            },\r\n            {\r\n              type: 'text',\r\n              left: 'center',\r\n              top: 'center',\r\n              z: 100,\r\n              style: {\r\n                fill: '#fff',\r\n                text: 'ECHARTS LINE CHART',\r\n                font: 'bold 26px sans-serif',\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: 'group',\r\n          left: '10%',\r\n          top: 'center',\r\n          children: [\r\n            {\r\n              type: 'rect',\r\n              z: 100,\r\n              left: 'center',\r\n              top: 'middle',\r\n              shape: {\r\n                width: 190,\r\n                height: 100,\r\n              },\r\n              style: {\r\n                fill: '#fff',\r\n                stroke: '#555',\r\n                lineWidth: 1,\r\n                shadowBlur: 8,\r\n                shadowOffsetX: 3,\r\n                shadowOffsetY: 3,\r\n                shadowColor: 'rgba(0,0,0,0.2)',\r\n              },\r\n            },\r\n            {\r\n              type: 'text',\r\n              z: 100,\r\n              left: 'center',\r\n              top: 'middle',\r\n              style: {\r\n                fill: '#333',\r\n                text: [\r\n                  '横轴表示温度，单位是 °C',\r\n                  '纵轴表示高度，单位是 km',\r\n                  '右上角有一个图片做的水印',\r\n                  '这个文本块可以放在图中各',\r\n                  '种位置',\r\n                ].join('\\n'),\r\n                font: '14px Microsoft YaHei',\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'liquidFill',\r\n          radius: '80%',\r\n          data,\r\n          backgroundStyle: {\r\n            borderWidth: 5,\r\n            borderColor: 'rgb(255,0,255,0.9)',\r\n            color: 'rgb(255,0,255,0.01)',\r\n          },\r\n          label: {\r\n            normal: {\r\n              formatter: `${(value * 100).toFixed(2)}%`,\r\n              textStyle: {\r\n                fontSize: 50,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  initChart5 = (year = 2020) => {\r\n    const myChart = echarts.init(document.getElementById('main5'));\r\n    const option = {\r\n      color: ['#00f2f1', '#ed3f35'], // 通过这个color修改两条线的颜色\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      // 图例组件\r\n      legend: {\r\n        textStyle: {\r\n          color: '#4c9bfd', // 图例文字颜色\r\n        },\r\n        // 这个10%必须加引号\r\n        right: '10%',\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        show: true, // 显示grid边框\r\n        borderColor: '#012f4a', // 边框颜色\r\n        containLabel: true, // 包含刻度文字在内\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          saveAsImage: {},\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false, // 去除轴间距（大白话：贴不贴x y 轴）\r\n        data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月'],\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        axisLabel: {\r\n          color: '#4c9bfd',\r\n        },\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        axisLabel: {\r\n          color: '#4c9bfd',\r\n        },\r\n        axisLine: {\r\n          show: false,\r\n        },\r\n        splitLine: {\r\n          lineStyle: {\r\n            color: '#012f4a',\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: '新增粉丝',\r\n          type: 'line',\r\n          data: yearData[year].data[0],\r\n          smooth: true, // 是否平滑曲线显示\r\n          itemStyle: {\r\n            color: 'yellow',\r\n            borderColor: 'red',\r\n          },\r\n          tooltip: {\r\n            position: [10, 10],\r\n            // formatter: '{b0}: {c0}<br />{b1}: {c1}',\r\n          },\r\n        },\r\n        {\r\n          name: '新增游客',\r\n          type: 'line',\r\n          data: yearData[year].data[1],\r\n        },\r\n      ],\r\n    };\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  initChart6 = () => {\r\n    const myChart = echarts.init(document.getElementById('main6'));\r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        data: ['邮件营销', '联盟广告'],\r\n      },\r\n      grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true,\r\n      },\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n        },\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value',\r\n        },\r\n      ],\r\n      series: [\r\n        {\r\n          name: '邮件营销',\r\n          type: 'line',\r\n          smooth: true,\r\n          data: [120, 132, 101, 134, 90, 230, 210],\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(\r\n              0,\r\n              0,\r\n              0,\r\n              1,\r\n              [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgba(1, 132, 213, .4)', // 渐变色的起始颜色\r\n                },\r\n                {\r\n                  offset: 0.8,\r\n                  color: 'rgba(1, 132, 213, .1)', // 渐变色的结束颜色\r\n                },\r\n              ],\r\n              false\r\n            ),\r\n            shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n          },\r\n          showSymbol: false, // 开始不显示拐点，鼠标hover才显示\r\n          symbol: 'circle', // 设置拐点类型\r\n          symbolSize: 12, // 设置拐点大小\r\n          emphasis: {\r\n            focus: 'series',\r\n          },\r\n          itemStyle: {\r\n            // 设置拐点样式\r\n            color: '#0184d5', // 拐点颜色\r\n            borderColor: 'rgba(221, 220, 107, .1)', // 拐点边框颜色\r\n            borderWidth: 12, // 拐点边框大小\r\n          },\r\n          lineStyle: {\r\n            type: 'solid',\r\n            color: '#0184d5',\r\n          },\r\n        },\r\n        {\r\n          name: '联盟广告',\r\n          type: 'line',\r\n          smooth: true,\r\n          data: [220, 182, 191, 234, 290, 330, 310],\r\n          areaStyle: {\r\n            color: new echarts.graphic.LinearGradient(\r\n              0,\r\n              0,\r\n              0,\r\n              1,\r\n              [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgba(0, 216, 135, .4)', // 渐变色的起始颜色\r\n                },\r\n                {\r\n                  offset: 0.8,\r\n                  color: 'rgba(0, 216, 135, .1)', // 渐变色的结束颜色\r\n                },\r\n              ],\r\n              false\r\n            ),\r\n            shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n          },\r\n          showSymbol: false, // 开始不显示拐点，鼠标hover才显示\r\n          symbol: 'circle', // 设置拐点类型\r\n          symbolSize: 12, // 设置拐点大小\r\n          emphasis: {\r\n            focus: 'series',\r\n          },\r\n          itemStyle: {\r\n            // 设置拐点样式\r\n            color: '#00d887', // 拐点颜色\r\n            borderColor: 'rgba(221, 220, 107, .1)', // 拐点边框颜色\r\n            borderWidth: 12, // 拐点边框大小\r\n          },\r\n          lineStyle: {\r\n            type: 'solid',\r\n            color: '#00d887',\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // eslint-disable-next-line no-return-assign\r\n      <div className=\"echart-page\" ref={(el) => (this.$dom = el)}>\r\n        <div className=\"chart\" id=\"main1\" />\r\n        <div className=\"chart\" id=\"main2\" />\r\n        <div className=\"chart\" id=\"main3\" />\r\n        <div className=\"chart\" id=\"main4\" />\r\n        <div className=\"change-data\">\r\n          <a href=\"javascript:;\" onClick={this.initChart5.bind(this, 2020)}>\r\n            2020\r\n          </a>\r\n          <a href=\"javascript:;\" onClick={this.initChart5.bind(this, 2021)}>\r\n            2021\r\n          </a>\r\n        </div>\r\n        <div className=\"chart\" id=\"main5\" />\r\n        <div className=\"chart\" id=\"main6\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EchartDemo;\r\n"],"sourceRoot":""}